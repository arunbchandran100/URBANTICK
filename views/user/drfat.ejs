<!-- Right Section: Cart Summary -->
<div class="bg-white p-4 shadow-md rounded-md">
    <h3 class="text-lg font-bold text-gray-800 border-b border-gray-200 pb-2">
        Order Summary
    </h3>

    <div class="mt-6 border-t border-gray-200 pt-4">
        <div class="flex justify-between text-gray-800">
            <span class="font-semibold">Subtotal:</span>
            <span class="ml-auto font-semibold">₹<%= subtotal %></span>
        </div>
        <div class="flex justify-between text-gray-800">
            <span class="font-semibold">Discount:</span>
            <span class="ml-auto text-green-600 font-semibold">-₹<%= totalDiscount %></span>
        </div>
        <div class="flex justify-between text-gray-800" id="couponDiscountSection" style="display: none;">
            <span class="font-semibold">Coupon Discount:</span>
            <span id="couponDiscountAmount" class="ml-auto text-green-600 font-semibold"></span>
        </div>

        <div class="flex justify-between text-gray-800">
            <span class="font-semibold">Shipping:</span>
            <span>Free</span>
        </div>
        <div class="flex justify-between text-gray-800 font-bold text-lg mt-2">
            <span>Total:</span>
            <span id="finalTotal">₹<%= totalAfterDiscount %></span>
        </div>

        <button onclick="placeOrder()" class="mt-6 w-full bg-gray-800 hover:bg-gray-900 text-white text-sm py-2 rounded-md">
            Place Order
        </button>
        <div class="bg-white p-4 shadow-md rounded-md mt-6">
            <h3 class="text-lg font-bold text-gray-800 border-b border-gray-200 pb-2">Apply Coupon</h3>
            <div class="mt-4 space-y-4">
                <div id="couponList" class="space-y-2">
                    <% if (availableCoupons.length > 0) { %>
                        <% availableCoupons.forEach(coupon => { %>
                            <label class="flex items-center gap-3 p-3 border border-gray-300 rounded-md">
                                <input type="radio" name="coupon" value="<%= coupon.couponCode %>"
                                    onclick="selectCoupon('<%= coupon.couponCode %>', <%= coupon.couponValue %>, '<%= coupon.couponType %>')">
                                <div>
                                    <p class="text-gray-800 font-semibold">
                                        <%= coupon.couponCode %> -
                                        <%= coupon.couponType === 'percentage' ? coupon.couponValue + '%' : '₹' + coupon.couponValue %> Off
                                    </p>
                                    <p class="text-sm text-gray-600">Min Purchase: ₹<%= coupon.minimumPurchaseAmount %></p>
                                    <p class="text-sm text-gray-600">Usage Limit: <%= coupon.perUserUsageLimit %> times per user</p>
                                </div>
                            </label>
                        <% }); %>
                    <% } else { %>
                        <p class="text-gray-600">No coupons available for your cart.</p>
                    <% } %>
                </div>
                <div id="appliedCoupon" class="hidden bg-green-100 p-2 rounded-md flex justify-between items-center">
                    <span class="text-green-800 font-semibold" id="appliedCouponText"></span>
                    <button class="text-red-600 hover:text-red-800" onclick="removeCoupon()">
                        Remove
                    </button>
                </div>
                <button id="applyCouponBtn" class="w-full bg-gray-800 hover:bg-gray-900 text-white text-sm py-2 rounded-md" disabled onclick="applyCoupon()">
                    Apply Coupon
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    let subtotal = <%= subtotal %>; // Initial subtotal from the server
    let totalDiscount = <%= totalDiscount %>; // Initial discount
    let shippingCost = 0; // Assuming free shipping
    let couponValue = 0; // Initial coupon value
    let selectedCouponCode = null;
    let selectedCouponType = null;

    function calculateTotal() {
        const total = subtotal - totalDiscount - couponValue + shippingCost;
        document.getElementById("finalTotal").innerText = `₹${total.toLocaleString()}`;
    }

    // Handle coupon selection
    function selectCoupon(couponCode, value, type) {
        selectedCouponCode = couponCode;
        couponValue = type === 'percentage' ? (subtotal * value) / 100 : value;
        document.getElementById("applyCouponBtn").disabled = false;
    }

    // Apply the selected coupon
    function applyCoupon() {
        if (selectedCouponCode) {
            // Show the coupon discount section
            document.getElementById("couponDiscountSection").style.display = "flex";
            document.getElementById("couponDiscountAmount").innerText = `-₹${couponValue.toLocaleString()}`;

            // Update applied coupon UI
            document.getElementById("appliedCouponText").innerText = `Applied Coupon: ${selectedCouponCode}`;
            document.getElementById("appliedCoupon").classList.remove("hidden");
            document.getElementById("applyCouponBtn").classList.add("hidden");
            document.getElementById("couponList").classList.add("hidden");

            calculateTotal(); // Recalculate total after applying the coupon
        }
    }

    // Remove the applied coupon
    function removeCoupon() {
        selectedCouponCode = null;
        couponValue = 0;

        // Hide the coupon discount section
        document.getElementById("couponDiscountSection").style.display = "none";
        document.getElementById("couponDiscountAmount").innerText = "";

        // Reset the applied coupon UI
        document.getElementById("appliedCouponText").innerText = "";
        document.getElementById("appliedCoupon").classList.add("hidden");
        document.getElementById("applyCouponBtn").classList.remove("hidden");
        document.getElementById("couponList").classList.remove("hidden");

        const selectedCoupon = document.querySelector("input[name='coupon']:checked");
        if (selectedCoupon) {
            selectedCoupon.checked = false;
        }

        calculateTotal(); // Recalculate total after removing the coupon
    }

    async function placeOrder() {
        const selectedAddress = document.querySelector("input[name='selectedAddress']:checked")?.value;
        const paymentMethod = document.querySelector("input[name='paymentMethod']:checked")?.value;

        if (!selectedAddress || !paymentMethod) {
            Swal.fire("Error", "Please select an address and payment method.", "error");
            return;
        }

        try {
            const response = await axios.post("/user/checkout", {
                selectedAddress,
                paymentMethod,
                appliedCouponCode: selectedCouponCode,
            });

            const data = await response.json();

            if (response.ok) {
                Swal.fire({
                    icon: "success",
                    title: "Order Placed!",
                    text: data.message,
                    showConfirmButton: true,
                    confirmButtonText: "OK",
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = "/user/orders";
                    }
                });
            } else {
                Swal.fire("Error", data.error, "error");
            }
        } catch (error) {
            Swal.fire("Error", "An error occurred while placing the order.", "error");
        }
    }
</script>
