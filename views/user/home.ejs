<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="style.css" />
  <title>Home Page</title>
  <%- include("partials/headerHTML") %>


<body class="bg-gray-100">
  <!------------ Navbar ---------->
  <%- include("partials/navBar") %>
    <div class="mt-16"></div>

    <!-- Page Content -->
    <div class="w-full mt-16">
      <img src="/images/main-banner.png" alt="Banner Image" class="w-full" />
    </div>

    <div class="grid mx-6 my-2 grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-8">
      <% let i=0; %>
        <% products.forEach(product=> { %> <% if (i < 5) { %>
            <div class="bg-white rounded-lg shadow-md p-4 flex flex-col transition-transform transform hover:scale-105">
              <a href="/product/<%= product._id %>">
                <img class="w-full h-auto rounded-lg mb-4" src="<%= product.imageUrl %>"
                  alt="<%= product.productName %>" />
              </a>
              <h3 class="text-lg font-semibold text-gray-800">
                <span class="font-bold">
                  <%= product.brand %>
                </span>
                <span class="text-gray-800">
                  <%= product.productName %>
                </span>
              </h3>
              <div>
                <p class="ml-1 text-gray-800 font-medium">
                  <%= product.color %>
                </p>
              </div>
              <div class="text-yellow-500 flex items-center">
                <i class="fa fa-star"></i>
                <p class="ml-1 text-gray-800 font-medium">
                  <%= product.rating || 'No rating' %>
                </p>
              </div>

              <% if (product.price && product.discountPrice) { %>
                <div class="flex gap-2">
                  <div class="text-xl font-bold text-gray-900">
                    ₹<%= product.discountPrice.toLocaleString() %>
                  </div>
                  <div class="text-gray-500 line-through mt-1">
                    ₹<%= product.price.toLocaleString() %>
                  </div>
                </div>
                <% } else { %>
                  <div class="text-xl font-bold text-gray-900">
                    Price Not Available
                  </div>
                  <% } %>
                    <div class="flex justify-between items-center mt-4">
                      <a href="javascript:void(0)" class="hover:text-slate-500"
                        onclick="addToWishlist('<%= product._id %>', '<%= product.variants_id %>')">
                        <i class="fa-regular fa-heart"></i>
                      </a>
                      <% if (product.stock> 0) { %>
                        <div class=" text-green-500"></div>
                        <% } else { %>
                          <div class=" font-semibold text-red-600 bg-red-100 border border-red-600 rounded-lg p-2">
                            Out of Stock
                          </div>
                          <% } %>
                    </div>
            </div>
            <% i++; %>
              <% } %>
                <% }); %>
    </div>

    <!------------- Footer ------------>
    <%- include("partials/footer") %>

      <script>
        const notyf = new Notyf({
          duration: 3000, // Notification duration in milliseconds
          position: {
            x: "right",
            y: "bottom",
          },
        });

        document.addEventListener("DOMContentLoaded", () => {
          updateWishlistBadge();

        });

        // Function to update the wishlist badge dynamically
        async function updateWishlistBadge() {
          try {
            const response = await axios.get("/wishlist/totalCount"); // Fetch wishlist count
            if (response.status === 200) {
              const wishlistCount = response.data.wishlistCount || 0;

              const wishlistBadge = document.getElementById("wishlistBadge");
              if (wishlistBadge) {
                wishlistBadge.textContent = wishlistCount; // Set the count
                wishlistBadge.classList.toggle("hidden", wishlistCount === 0); // Hide if count is 0
              }
            }
          } catch (error) {
            console.error("Error updating wishlist badge:", error);
          }
        }


        async function addToWishlist(productId, variantId) {
          try {
            // Make a POST request to add the product to the wishlist
            const response = await fetch("/wishlist/add", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ productId, variantId }),
            });

            // Check if the request was successful
            if (response.ok) {
              updateWishlistBadge();
              notyf.success("Product added to wishlist!");
            } else {
              // Handle errors from the server
              const errorData = await response.json();
              if (errorData.error === "Product is already in your wishlist.") {
                notyf.success(errorData.error); // Use info for non-critical notifications
              } else {
                notyf.error(errorData.error || "Failed to add to wishlist.");
              }
            }
          } catch (error) {
            // Handle network or unexpected errors
            console.error("Error adding to wishlist:", error);
            notyf.error("An error occurred while adding to wishlist.");
          }
        }

      </script>
</body>

</html>