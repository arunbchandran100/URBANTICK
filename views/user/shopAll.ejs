<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="style.css" />
    <title>Shop All</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
      integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
  </head>

  <body class="bg-gray-100">
    <!------------ Navbar ---------->
    <%- include("partials/navBar") %>
    <div class="mt-16"></div>

    <!-- Page Content -->
    <div class="py-12 bg-gray-50">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 class="text-3xl font-bold text-gray-900 mb-8 text-center">
          Shop All
        </h2>

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 mb-6">
  <div class="relative">
    <input
      type="text"
      id="searchInput"
      class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
      placeholder="Search for products or brands..."
    />
    <button
      id="searchButton"
      class="absolute right-2 top-2 bg-blue-500 text-white px-4 py-2 rounded-lg"
    >
      Search
    </button>
  </div>
</div>


        <!-- Filter Section -->
        <div class="filter-container p-4 bg-gray-100 rounded-lg">
          <!-- Gender Filter -->
          <label for="gender" class="block mb-2 font-semibold">Gender</label>
          <select
            id="gender"
            class="border border-gray-300 rounded-lg px-4 py-2 w-full mb-4"
          >
            <option value="">All</option>
            <option value="male">Male</option>
            <option value="female">Female</option>
            <option value="unisex">Unisex</option>
          </select>

          <!-- Category Filter -->
          <label for="category" class="block mb-2 font-semibold"
            >Category</label
          >
          <select
            id="category"
            class="border border-gray-300 rounded-lg px-4 py-2 w-full mb-4"
          >
            <option value="">All</option>
            <!-- Categories will be dynamically populated -->
          </select>

          <!-- Brand Filter -->
          <label for="brand" class="block mb-2 font-semibold">Brand</label>
          <select
            id="brand"
            class="border border-gray-300 rounded-lg px-4 py-2 w-full mb-4"
          >
            <option value="">All</option>
            <!-- Brands will be dynamically populated -->
          </select>

          <!-- Color Filter -->
          <label for="color" class="block mb-2 font-semibold">Color</label>
          <select
            id="color"
            class="border border-gray-300 rounded-lg px-4 py-2 w-full mb-4"
          >
            <option value="">All</option>
            <!-- Colors will be dynamically populated -->
          </select>

          <!-- Price Range -->
          <label for="color" class="block mb-2 font-semibold">Price</label>
          <div class="flex items-center space-x-4 mb-4">
            <input
              type="number"
              id="minPrice"
              class="border border-gray-300 rounded-lg px-4 py-2 w-32"
              placeholder="Min Price"
            />
            <input
              type="number"
              id="maxPrice"
              class="border border-gray-300 rounded-lg px-4 py-2 w-32"
              placeholder="Max Price"
            />
          </div>

          <!-- Filter Button -->
          <button
            id="applyFilter"
            class="px-4 py-2 bg-blue-600 text-white rounded-lg transform transition-transform duration-300 ease-in-out hover:bg-blue-700 hover:scale-105 active:bg-blue-800 active:scale-95"
          >
            Apply Filters
          </button>
        </div>

        <!-- Product Grid -->
        <div
          id="productGrid"
          class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6"
        >
          <!-- Dynamic product rendering here -->
          <% products.forEach(product=> { %>
          <div class="bg-white rounded-lg shadow-md p-4 flex flex-col">
            <a href="/product/<%= product._id %>">
              <img
                class="w-full h-auto rounded-lg mb-4"
                src="<%= product.imageUrl %>"
                alt="<%= product.productName %>"
              />
            </a>
            <h3 class="text-lg font-semibold text-gray-800">
              <span class="font-bold"> <%= product.brand %> </span>
              <span class="text-gray-800"> <%= product.productName %> </span>
            </h3>
            <!-- Rating -->
            <div class="text-yellow-500 flex items-center">
              <i class="fa fa-star"></i>
              <p class="ml-1 text-gray-800 font-medium">
                <%= product.rating || 'No rating' %>
              </p>
            </div>

            <% if (product.price && product.discountPrice) { %>
            <div class="flex gap-2">
              <div class="text-xl font-bold text-gray-900">
                ₹<%= product.discountPrice %>
              </div>

              <div class="text-gray-500 line-through mt-1">
                ₹<%= product.price %>
              </div>
            </div>
            <% } else { %>
            <div class="text-xl font-bold text-gray-900">
              Price Not Available
            </div>
            <% } %>
            <div class="flex justify-between items-center mt-4">
              <a href="#" class="hover:text-slate-500"
                ><i class="fa-regular fa-heart"></i
              ></a>
            </div>
          </div>
          <% }) %>
        </div>
      </div>
    </div>

    <!------------- Footer ------------>
    <%- include("partials/footer") %>
  </body>

  <script>
    document.addEventListener("DOMContentLoaded", async () => {
      const brandSelect = document.getElementById("brand");
      const colorSelect = document.getElementById("color");
      const categorySelect = document.getElementById("category");

      const filterButton = document.getElementById("applyFilter");

      // Fetch brands and colors to populate dropdowns
      try {
        const response = await fetch("/products/filter-options");
        const data = await response.json();

        if (data.brands) {
          data.brands.forEach((brand) => {
            brandSelect.insertAdjacentHTML(
              "beforeend",
              `<option value="${brand}">${brand}</option>`
            );
          });
        }

        if (data.colors) {
          data.colors.forEach((color) => {
            colorSelect.insertAdjacentHTML(
              "beforeend",
              `<option value="${color}">${color}</option>`
            );
          });
        }

        if (data.categories) {
          data.categories.forEach((category) => {
            categorySelect.insertAdjacentHTML(
              "beforeend",
              `<option value="${category._id}">${category.categoriesName}</option>`
            );
          });
        }
      } catch (error) {
        console.error("Error fetching filter options:", error);
      }

      // Handle filter button click
      filterButton.addEventListener("click", async () => {
        const gender = document.getElementById("gender").value;
        const brand = brandSelect.value;
        const color = colorSelect.value;
        const minPrice = document.getElementById("minPrice").value;
        const maxPrice = document.getElementById("maxPrice").value;
        const category = categorySelect.value;

        //console.log(2222);
        //console.log(minPrice);
        try {
          const response = await fetch(
            `/products/filter?gender=${gender}&brand=${brand}&color=${color}&category=${category}&minPrice=${minPrice}&maxPrice=${maxPrice}`
          );
          const data = await response.json();

          if (data.products) {
            const productGrid = document.querySelector(".grid");
            productGrid.innerHTML = ""; // Clear current products

            // Render filtered products
            data.products.forEach((product) => {
              const productCard = `
            <div class="bg-white rounded-lg shadow-md p-4 flex flex-col">
              <a href="/product/${product._id}">
                <img class="w-full h-auto rounded-lg mb-4" src="${
                  product.imageUrl
                }" alt="${product.productName}" />
              </a>

              <h3 class="text-lg font-semibold text-gray-800"><span class="font-bold">${
                product.brand
              }</span> <span class="text-gray-800">${
                product.productName
              }</span></h3>
              <div class="text-yellow-500 flex items-center">
                <i class="fa fa-star"></i>
                <p class="ml-1 text-gray-800 font-medium">
                   ${ product.rating}
                </p>
              </div>
              ${
                product.price && product.discountPrice
                  ? `
                  <div class="flex gap-2">
                    <div class="text-xl font-bold text-gray-900">₹${product.discountPrice}</div>
                    <div class="text-gray-500 line-through mt-1">₹${product.price}</div>
                  </div>
                  `
                  : `<div class="text-xl font-bold text-gray-900">Price Not Available</div>`
              }
              <div class="flex justify-between items-center mt-4">
                <a href="#" class="hover:text-slate-500"><i class="fa-regular fa-heart"></i></a>
              </div>
            </div>`;
              productGrid.innerHTML += productCard;
            });
          }
        } catch (error) {
          console.error("Error filtering products:", error);
        }
      });
    });


    document.addEventListener("DOMContentLoaded", () => {
  const searchInput = document.getElementById("searchInput");
  const searchButton = document.getElementById("searchButton");
  const productGrid = document.querySelector(".grid");

  const performSearch = async () => {
    const query = searchInput.value.trim();

    if (!query) {
      alert("Please enter a search term");
      return;
    }

    try {
      const response = await fetch(`/products/search?query=${query}`);
      const data = await response.json();

      if (data.products) {
        productGrid.innerHTML = ""; // Clear current products

                    // Render filtered products
            data.products.forEach((product) => {
              const productCard = `
            <div class="bg-white rounded-lg shadow-md p-4 flex flex-col">
              <a href="/product/${product._id}">
                <img class="w-full h-auto rounded-lg mb-4" src="${
                  product.imageUrl
                }" alt="${product.productName}" />
              </a>

              <h3 class="text-lg font-semibold text-gray-800"><span class="font-bold">${
                product.brand
              }</span> <span class="text-gray-800">${
                product.productName
              }</span></h3>
              <div class="text-yellow-500 flex items-center">
                <i class="fa fa-star"></i>
                <p class="ml-1 text-gray-800 font-medium">
                   ${ product.rating}
                </p>
              </div>
              ${
                product.price && product.discountPrice
                  ? `
                  <div class="flex gap-2">
                    <div class="text-xl font-bold text-gray-900">₹${product.discountPrice}</div>
                    <div class="text-gray-500 line-through mt-1">₹${product.price}</div>
                  </div>
                  `
                  : `<div class="text-xl font-bold text-gray-900">Price Not Available</div>`
              }
              <div class="flex justify-between items-center mt-4">
                <a href="#" class="hover:text-slate-500"><i class="fa-regular fa-heart"></i></a>
              </div>
            </div>`;
              productGrid.innerHTML += productCard;
            });
          }
    } catch (error) {
      console.error("Error searching products:", error);
    }
  };

  // Trigger search on button click
  searchButton.addEventListener("click", performSearch);

  // Trigger search on Enter key
  searchInput.addEventListener("keypress", (e) => {
    if (e.key === "Enter") {
      performSearch();
    }
  });
});

  </script>
</html>
