<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Wishlist</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <%- include("partials/headerHTML") %>
</head>

<body class="bg-gray-50">
    <%- include("partials/navBar") %>
        <div class="mt-16"></div>

        <!-- Breadcrumb -->
        <div class="bg-gray-50 pt-4">
            <div class="max-w-7xl sm:px-6 lg:px-8">
                <nav class="text-sm font-medium text-gray-500" aria-label="Breadcrumb">
                    <ol class="flex items-center space-x-2">
                        <!-- Home Link -->
                        <li>
                            <a href="/home" class="text-gray-800 hover:text-gray-900 transition">
                                Home
                            </a>
                        </li>
                        <!-- Separator -->
                        <li>
                            <span class="text-gray-400">/</span>
                        </li>
                        <!-- Current Page -->
                        <li class="text-gray-500">Wishlist</li>
                    </ol>
                </nav>
            </div>
        </div>
        <!-- Header -->
        <div class="container mx-auto px-4">
            <h2 class="text-3xl font-bold text-gray-900 mb-8 text-center">
                Your Wishlist
            </h2>

            <% if (wishlistItems.length> 0) { %>
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
                    <% wishlistItems.forEach(item=> { %>
                        <div id="wishlist-item-<%= item._id %>"
                            class="bg-white rounded-lg shadow-md p-4 flex flex-col w-72 mx-auto">
                            <!-- Product Image -->
                            <a href="/product/<%= item.productId %>">
                                <img class="w-full h-62 object-cover rounded-lg mb-4"
                                    src="<%= item.productDetails.imageUrl[0] %>"
                                    alt="<%= item.productDetails.productName %>" />
                            </a>

                            <!-- Product Details -->
                            <h3 class="text-lg font-semibold text-gray-800">
                                <span class="font-bold">
                                    <%= item.productDetails.brand %>
                                </span>
                                <span class="text-gray-800">
                                    <%= item.productDetails.productName %>
                                </span>
                            </h3>
                            <div>
                                <p class="ml-1 text-gray-800 font-medium">
                                    Color: <%= item.variantDetails.color || 'N/A' %>
                                </p>
                            </div>
                            <div class="text-yellow-500 flex items-center">
                                <i class="fa fa-star"></i>
                                <p class="ml-1 text-gray-800 font-medium">
                                    <%= item.variantDetails.rating || 'No rating' %>
                                </p>
                            </div>

                            <!-- Pricing -->
                            <% if (item.variantDetails.price && item.variantDetails.discountPrice) { %>
                                <div class="flex gap-2">
                                    <div class="text-xl font-bold text-gray-900">
                                        ₹<%= item.variantDetails.discountPrice.toLocaleString() %>
                                    </div>
                                    <div class="text-gray-500 line-through mt-1">
                                        ₹<%= item.variantDetails.price.toLocaleString() %>
                                    </div>
                                </div>
                                <% } else { %>
                                    <div class="text-xl font-bold text-gray-900">Price Not Available</div>
                                    <% } %>

                                        <!-- Action Buttons -->
                                        <div class="flex justify-between items-center mt-4">
                                            <button class="hover:text-slate-500"
                                                onclick="removeFromWishlist('<%= item._id %>', 'wishlist-item-<%= item._id %>')">
                                                <i class="fa-solid fa-trash text-red-500"></i>
                                            </button>
                                            <% if (item.variantDetails.stock> 0) { %>
                                                <button id="addToCartButton" data-product-id="<%= item.productId %>"
                                                    data-variant-id="<%= item.variantDetails.color %>"
                                                    data-wishlist-id="<%= item._id %>"  
                                                    data-element-id="wishlist-item-<%= item._id %>"
                                                    class="px-6 py-3 bg-black text-white rounded-lg font-bold shadow-md hover:bg-gray-800">
                                                    Add To Cart
                                                </button>
                                                <% } else { %>
                                                    <div
                                                        class="mt-2 font-semibold text-red-600 bg-red-100 border border-red-600 rounded-lg p-2">
                                                        Out of Stock
                                                    </div>
                                                    <% } %>
                                        </div>
                        </div>

                        <% }); %>
                </div>
                <% } else { %>
                    <!-- No items in the cart message -->
                    <div class="grid align-items-center gap-8 mt-16">
                        <div
                            class="md:col-span-2 space-y-4 p-4 bg-gray-50 shadow-lg text-center text-xl font-medium text-gray-700">
                            Your wishlist is empty.

                            <!-- Continue Shopping Button -->
                            <div class="mt-6 flex justify-center">
                                <button type="button" onclick="window.location.href='/shopall'"
                                    class="text-sm px-6 py-3 w-full md:w-1/3 font-semibold tracking-wide bg-gray-800 text-white rounded-md hover:bg-gray-900">
                                    Continue Shopping
                                </button>
                            </div>
                        </div>
                    </div>
                    <% } %>
        </div>

        <!------------- Footer ------------>
        <div class="pt-6"><%- include("partials/footer") %></div>

        <script>
            const notyf = new Notyf({
                duration: 3000, // Notification duration in milliseconds
                position: {
                    x: "right",
                    y: "bottom",
                },
            });

            document.addEventListener("DOMContentLoaded", () => {
                updateCartBadge();
                updateWishlistBadge();

            });

            // Function to update the wishlist badge dynamically
            async function updateWishlistBadge() {
                try {
                    const response = await axios.get("/wishlist/totalCount"); // Fetch wishlist count
                    if (response.status === 200) {
                        const wishlistCount = response.data.wishlistCount || 0;

                        const wishlistBadge = document.getElementById("wishlistBadge");
                        if (wishlistBadge) {
                            wishlistBadge.textContent = wishlistCount; // Set the count
                            wishlistBadge.classList.toggle("hidden", wishlistCount === 0); // Hide if count is 0
                        }
                    }
                } catch (error) {
                    console.error("Error updating wishlist badge:", error);
                }
            }




            async function updateCartBadge() {
                try {
                    const response = await axios.get("/cart/totalQuantity"); // Endpoint to fetch total quantity
                    if (response.status === 200) {
                        const totalQuantity = response.data.totalQuantity || 0;

                        // Update the cart badge element
                        const cartBadge = document.querySelector("#cartBadge");
                        if (cartBadge) {
                            cartBadge.textContent = totalQuantity;
                            cartBadge.style.display = totalQuantity > 0 ? "inline" : "none"; // Hide badge if 0
                        }
                    }
                } catch (error) {
                    console.error("Error updating cart badge:", error);
                }
            }

            async function removeFromWishlist(wishlistId, elementId) {
                // Show SweetAlert confirmation
                const confirmation = await Swal.fire({
                    title: "Are you sure?",
                    text: "Do you want to remove this item from your wishlist?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#d33",
                    cancelButtonColor: "#3085d6",
                    confirmButtonText: "Yes, remove it!",
                });

                if (confirmation.isConfirmed) {
                    try {
                        const response = await fetch(`/wishlist/remove/${wishlistId}`, {
                            method: "DELETE",
                        });

                        if (response.ok) {
                            // Remove the element from the DOM
                            const element = document.getElementById(elementId);
                            console.log(element);
                            if (element) {
                                element.remove();
                            }

                            updateWishlistBadge();


                            // Show success notification
                            notyf.success("Item has been removed from your wishlist.");
                        } else {
                            // Show error notification
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to remove item from wishlist.",
                                icon: "error",
                            });
                        }
                    } catch (error) {
                        console.error("Error removing wishlist item:", error);
                        Swal.fire({
                            title: "Error!",
                            text: "An error occurred while removing the item.",
                            icon: "error",
                        });
                    }
                }
            }


            document.querySelectorAll("#addToCartButton").forEach((button) => {
                button.addEventListener("click", async function () {
                    const productId = button.getAttribute("data-product-id");
                    const variantId = button.getAttribute("data-variant-id");
                    const wishlistId = button.getAttribute("data-wishlist-id"); // Get wishlist ID from data attribute
                    const elementId = button.getAttribute("data-element-id"); // Element ID for DOM removal
                    const quantity = 1; // Default quantity for now, can add quantity selection

                    try {
                        // Add product to cart
                        const addToCartResponse = await fetch("/cart/add", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify({
                                productId,
                                variantId,
                                quantity,
                            }),
                        });

                        const addToCartData = await addToCartResponse.json();

                        if (addToCartResponse.ok) {
                            // Remove product from wishlist
                            const removeWishlistResponse = await fetch(
                                `/wishlist/remove/${wishlistId}`,
                                {
                                    method: "DELETE",
                                }
                            );

                            // Remove the element from the DOM
                            const element = document.getElementById(elementId);
                            console.log(element);
                            if (element) {
                                element.remove();
                            }

                            // Update UI
                            updateCartBadge();
                            updateWishlistBadge();

                            // Show success notifications
                            notyf.success(addToCartData.message);

                        } else {
                            throw new Error(addToCartData.message || "Failed to add to cart.");
                        }
                    } catch (error) {
                        console.error("Error processing request:", error.message);
                        notyf.error(error.message);
                    }
                });
            });

        </script>
</body>

</html>