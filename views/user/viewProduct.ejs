<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="style.css" />
    <title>Product Page</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
      integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js"></script>

    <style>
      #imageZoom {
        width: 100%;
        position: relative;
        cursor: zoom-in;
      }

      #imageZoom img {
        width: 100%;
        height: auto;
        object-fit: cover;
      }

      #imageZoom::after {
        display: var(--display);
        content: "";
        width: 100%;
        height: 100%;
        background-color: black;
        background-image: var(--url);
        background-size: 200%;
        background-position: var(--zoom-x) var(--zoom-y);
        position: absolute;
        left: 0;
        top: 0;
        pointer-events: none;
      }
    </style>
  </head>

  <body class="bg-gray-100">
    <!------------ Navbar ---------->
    <%- include("partials/navBar") %>
    <div class="mt-16"></div>

    <!-- Page Content -->
    <div class="max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
      <div class="flex flex-wrap md:flex-nowrap">
        <div class="flex flex-col md:flex-row space-x-4">
          <!-- Thumbnails -->
          <div class="w-1/5 md:w-1/6 space-y-4">
            <% product.imageUrl.forEach((image, index)=> { %>
            <img
              src="<%= image %>"
              alt="<%= product.productName %> Thumbnail <%= index + 1 %>"
              class="w-full h-auto rounded-md shadow-md cursor-pointer border-2 border-transparent hover:border-gray-400"
              onclick="updateMainImage('<%= image %>')"
            />
            <% }) %>
          </div>

          <!-- Main Image with Zoom -->
          <div class="w-4/5">
            <div
              id="imageZoom"
              class="relative"
              style="
                --url: url(<%= product.imageUrl[0] %>);
                --zoom-x: 0%;
                --zoom-y: 0%;
                --display: none;
              "
            >
              <img
                id="main-product-image"
                src="<%= product.imageUrl[0] %>"
                alt="<%= product.productName %> Main Image"
                class="w-full h-auto rounded-md shadow-md"
              />
            </div>
          </div>

          <!-- Right Section: Product Details -->
          <div class="w-full md:w-2/3 md:pl-12">
            <h1 class="text-2xl font-bold text-gray-800">
              <%= product.productName %>
            </h1>

            <!-- Pricing -->
            <div class="flex items-center space-x-4 my-4">
              <p class="text-lg text-gray-800 font-bold variant-price">
                ₹<%= product.variants[0]?.discountPrice || 'N/A' %>
              </p>
              <p class="text-gray-500 line-through variant-original-price">
                ₹<%= product.variants[0]?.price || 'N/A' %>
              </p>
              <p class="text-green-600 font-semibold variant-discount">
                <%= product.variants[0]?.discountPercentage || 0 %>% off
              </p>
            </div>

            <!-- Rating -->
            <div class="text-yellow-500 flex items-center">
              <i class="fa fa-star"></i>
              <p class="mr-2 text-gray-800 font-medium variant-rating">
                <%= product.variants[0]?.rating || 'No rating' %>
              </p>
              <span class="ml-1 text-gray-500">426 reviews</span>
            </div>

            <!-- Stock Status -->
            <div class="variant-stock mt-2">
              <% if (product.variants[0].stock==0) { %>
              <div
                class="font-semibold text-red-600 bg-red-100 border border-red-600 rounded-lg p-2"
                style="width: fit-content"
              >
                Out of Stock
              </div>

              <% } else { %>
              <div class="text-green-500">In Stock</div>
              <% } %>
            </div>

            <!-- Product Details -->
            <div class="mt-6">
              <h2 class="text-lg font-bold text-gray-800">Product Details</h2>
              <ul class="text-gray-600 mt-4 space-y-2">
                <li>
                  Gender:
                  <span class="font-semibold text-gray-800">
                    <%= product.gender %>
                  </span>
                </li>
                <li>
                  Brand:
                  <span class="font-semibold text-gray-800">
                    <%= product.brand %>
                  </span>
                </li>
              </ul>
            </div>

            <!-- Select Color -->
            <div class="mt-6">
              <label for="color" class="block font-medium text-gray-700"
                >Select Color</label
              >
              <select
                id="color"
                class="mt-2 px-4 py-2 border rounded-lg shadow-sm"
              >
                <% product.variants.forEach(variant=> { %>
                <option value="<%= variant.color %>">
                  <%= variant.color || 'N/A' %>
                </option>
                <% }) %>
              </select>
            </div>

            <div id="cartMessage" class="alert" style="display: none"></div>
            <!-- Add a data attribute to an element (hidden or visible) -->
            <div
              id="product-details"
              data-product-id="<%= product._id %>"
            ></div>

            <!-- Action Buttons -->
            <!-- <div class="mt-8 flex space-x-4">
              <button class="px-6 py-3 bg-black text-white rounded-lg font-bold shadow-md hover:bg-gray-800">
                Buy Now
              </button>
              <button id="addToCartButton"
                class="px-6 py-3 bg-gray-200 rounded-lg font-bold shadow-md hover:bg-gray-300">
                Add To Cart
              </button> -->
            <!-- ********************************* -->

            <% if (product.variants[0].stock==0) { %>
            <div class="mt-8 flex space-x-4"></div>
            <% } else { %>
            <!-- Action Buttons  -->
            <div class="mt-8 flex space-x-4">
              <button
              id="buyNowButton"
                class="px-6 py-3 bg-black text-white rounded-lg font-bold shadow-md hover:bg-gray-800"
              >
                Buy Now
              </button>
              <button
                id="addToCartButton"
                class="px-6 py-3 bg-gray-200 rounded-lg font-bold shadow-md hover:bg-gray-300"
              >
                Add To Cart
              </button>
              <% } %>

              <!-- ***************************** -->
            </div>
          </div>
        </div>
      </div>
    </div>
    <!------------- Footer ------------>
    <%- include("partials/footer") %>

    <script>
      const notyf = new Notyf({
        duration: 3000, // Notification duration in milliseconds
        position: {
          x: "right",
          y: "bottom",
        },
      });

      // JavaScript for zoom functionality
      const imageZoom = document.getElementById("imageZoom");

      // Handle mousemove for zoom
      imageZoom.addEventListener("mousemove", (event) => {
        imageZoom.style.setProperty("--display", "block");
        const pointer = {
          x: (event.offsetX * 100) / imageZoom.offsetWidth,
          y: (event.offsetY * 100) / imageZoom.offsetHeight,
        };
        imageZoom.style.setProperty("--zoom-x", pointer.x + "%");
        imageZoom.style.setProperty("--zoom-y", pointer.y + "%");
      });

      // Hide zoom on mouseout
      imageZoom.addEventListener("mouseout", () => {
        imageZoom.style.setProperty("--display", "none");
      });

      // Update main image and zoom background
      function updateMainImage(imageUrl) {
        const mainImage = document.getElementById("main-product-image");
        mainImage.src = imageUrl;
        imageZoom.style.setProperty("--url", `url(${imageUrl})`);
      }

      // Function to update variant details
      function updateVariantDetails(variant) {
        const buyNowButton = document.getElementById("buyNowButton");
const addToCartButton = document.getElementById("addToCartButton");


        document.querySelector(".variant-price").textContent = `₹${
          variant.discountPrice || "N/A"
        }`;
        document.querySelector(".variant-original-price").textContent = `₹${
          variant.price || "N/A"
        }`;
        document.querySelector(".variant-discount").textContent = `${
          variant.discountPercentage || 0
        }% off`;
        document.querySelector(".variant-rating").textContent = variant.rating
          ? `${variant.rating} stars`
          : "No rating";
        // Update stock status with appropriate styling
        const stockElement = document.querySelector(".variant-stock");
        if (variant.stock > 0) {
          stockElement.innerHTML = '<div class="text-green-500">In Stock</div>';
            buyNowButton.style.display = "inline-block"; // Show the buttons
  addToCartButton.style.display = "inline-block"; // Show the buttons
        } else {
          stockElement.innerHTML =
            '<div class="font-semibold text-red-600 bg-red-100 border border-red-600 rounded-lg p-2" style="width: fit-content;">Out of Stock</div>';
              buyNowButton.style.display = "none"; // Hide the buttons
  addToCartButton.style.display = "none"; // Hide the buttons
          }
      }

      // Event listener for color change
      document.getElementById("color").addEventListener("change", function () {
        const selectedColor = this.value;

        // Retrieve the productId from the data attribute
        const productDetails = document.getElementById("product-details");
        const productId = productDetails.getAttribute("data-product-id");

        if (!productId) {
          console.error("Product ID is missing.");
          return;
        }

        console.log("Selected color is: " + selectedColor);
        console.log("Product ID is: " + productId);

        // Fetch the variant details
        fetch(
          `/product/getcolor/variant?productId=${productId}&color=${selectedColor}`
        )
          .then((response) => response.json())
          .then((variant) => {
            if (variant.imageUrl) updateMainImage(variant.imageUrl); // Update main image
            updateVariantDetails(variant); // Update other details
          })
          .catch((error) =>
            console.error("Error fetching variant details:", error)
          );
      });
      // Frontend JavaScript
      document
        .getElementById("addToCartButton")
        .addEventListener("click", function () {
          const productId = "<%= product._id %>"; // Pass dynamically from server
          const variantId = document.getElementById("color").value; // Selected variant ID
          const quantity = 1; // Default quantity for now, can add quantity selection

          fetch("/cart/add", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              productId,
              variantId,
              quantity,
            }),
          })
            .then((response) => {
              if (response.ok) {
                notyf.success("Item added to cart successfully!");
              } else {
                return response.json().then((data) => {
                  throw new Error(data.message || "Failed to add to cart.");
                });
              }
            })
            .catch((error) => {
              console.error("Error adding to cart:", error.message);
              notyf.error(error.message);
            });
        });

      // Helper function to update cart count
      async function updateCartCount() {
        try {
          const response = await fetch("/api/cart/count");
          const data = await response.json();
          const cartCountElement = document.getElementById("cartCount");
          if (cartCountElement) {
            cartCountElement.textContent = data.count;
          }
        } catch (error) {
          console.error("Error updating cart count:", error);
        }
      }
    </script>
  </body>
</html>
